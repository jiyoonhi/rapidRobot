<?xml version="1.0" ?>
<robot name="turtlebot3_waffle" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find rapid)/urdf/common_properties.xacro"/>
  <xacro:include filename="$(find rapid)/urdf/turtlebot3_waffle.gazebo.xacro"/>

  <xacro:property name="r200_cam_rgb_px" value="0.005"/>
  <xacro:property name="r200_cam_rgb_py" value="0.018"/>
  <xacro:property name="r200_cam_rgb_pz" value="0.013"/>
  <xacro:property name="r200_cam_depth_offset" value="0.01"/>


  <link name="base_link">
    <visual>
      <origin xyz="-0.064 0 0.0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://rapid/urdf/meshes/bases/waffle_base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="light_black"/>
    </visual>

    <collision>
      <origin xyz="-0.064 0 0.047" rpy="0 0 0"/>
      <geometry>
        <box size="0.266 0.266 0.094"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="1.3729096e+00"/>
      <inertia ixx="8.7002718e-03" ixy="-4.7576583e-05" ixz="1.1160499e-04"
               iyy="8.6195418e-03" iyz="-3.5422299e-06"
               izz="1.4612727e-02" />
    </inertial>
  </link>

  <joint name="wheel_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_left_link"/>
    <origin xyz="0.0 0.144 0.023" rpy="-1.57 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="wheel_left_link">
    <visual>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
      <geometry>
        <mesh filename="package://rapid/urdf/meshes/wheels/left_tire.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.018" radius="0.033"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="2.8498940e-02" />
      <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09"
               iyy="1.1192413e-05" iyz="-1.4400107e-11"
               izz="2.0712558e-05" />
      </inertial>
  </link>

  <joint name="wheel_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_right_link"/>
    <origin xyz="0.0 -0.144 0.023" rpy="-1.57 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="wheel_right_link">
    <visual>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
      <geometry>
        <mesh filename="package://rapid/urdf/meshes/wheels/right_tire.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.018" radius="0.033"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="2.8498940e-02" />
      <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09"
               iyy="1.1192413e-05" iyz="-1.4400107e-11"
               izz="2.0712558e-05" />
      </inertial>
  </link>

  <joint name="caster_back_right_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_back_right_link"/>
    <origin xyz="-0.177 -0.064 -0.004" rpy="-1.57 0 0"/>
  </joint>

  <link name="caster_back_right_link">
    <collision>
      <origin xyz="0 0.001 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.030 0.009 0.020"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="0.005" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0"
               izz="0.001" />
    </inertial>
  </link>

  <joint name="caster_back_left_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_back_left_link"/>
    <origin xyz="-0.177 0.064 -0.004" rpy="-1.57 0 0"/>
  </joint>

  <link name="caster_back_left_link">
    <collision>
      <origin xyz="0 0.001 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.030 0.009 0.020"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="0.005" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0"
               izz="0.001" />
    </inertial>
  </link>

  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0.0 0 0.088" rpy="0 0 0"/>
  </joint>
  <link name="imu_link"/>


  <!-- rplidar a3 -->
  <joint name="rplidar_a3_joint" type="fixed">
    <parent link="base_link"/>
    <child link="laser"/>
    <origin xyz="-0.064 0 0.08" rpy="1.57 0 0"/>
  </joint>

  <link name="laser">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://rapid/urdf/models/rplidar-a2m4-r1.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0.015 0 -0.0065" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.041" radius="0.038"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="0.190" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0"
               izz="0.001" />
    </inertial>
  </link>

  <!--zed camera -->
  <xacro:include filename="$(find zed_wrapper)/urdf/include/materials.urdf.xacro" />

  <!-- Arguments -->


  <xacro:arg name="camera_name"   default="zed" />
  <xacro:arg name="camera_model"  default="zed" />
  <xacro:arg name="base_frame"    default="base_link" />
  <xacro:arg name="cam_pos_x"     default="0.0" />
  <xacro:arg name="cam_pos_y"     default="0.0" />
  <xacro:arg name="cam_pos_z"     default="0.03" />
  <xacro:arg name="cam_roll"      default="0.0" />
  <xacro:arg name="cam_pitch"     default="1.57" />
  <xacro:arg name="cam_yaw"       default="0.0" />

  <!-- Properties -->
  <xacro:property name="M_PI"     value="3.1415926535897931" />
  <xacro:property name="model"    value="$(arg camera_model)" />

  <xacro:if value="${model == 'zed'}">
      <xacro:property name="baseline" value="0.12" />
  </xacro:if>
  <xacro:if value="${model == 'zedm'}">
      <xacro:property name="baseline" value="0.06" />
  </xacro:if>

  <!-- Camera Center -->
  <joint name="$(arg camera_name)_camera_center_joint" type="fixed">
      <parent link="$(arg base_frame)"/>
      <child link="$(arg camera_name)_camera_center"/>
      <origin xyz="$(arg cam_pos_x) $(arg cam_pos_y) $(arg cam_pos_z)" rpy="$(arg cam_roll) $(arg cam_pitch) $(arg cam_yaw)" />
  </joint>

  <link name="$(arg camera_name)_camera_center">
      <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
              <mesh filename="package://rapid/urdf/models/${model}.stl" />
          </geometry>
          <material name="${model}_mat" />
      </visual>
  </link>

  <!-- Left Camera -->
  <joint name="$(arg camera_name)_left_camera_joint" type="fixed">
      <parent link="$(arg camera_name)_camera_center"/>
      <child link="$(arg camera_name)_left_camera_frame"/>
      <origin xyz="0 ${baseline/2} 0" rpy="0 0 0" />
  </joint>

  <link name="$(arg camera_name)_left_camera_frame" />

  <joint name="$(arg camera_name)_left_camera_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="-${M_PI/2} 0.0 -${M_PI/2}"/>
      <parent link="$(arg camera_name)_left_camera_frame"/>
      <child link="$(arg camera_name)_left_camera_optical_frame"/>
  </joint>

  <link name="$(arg camera_name)_left_camera_optical_frame"/>

  <!-- Right Camera -->
  <joint name="$(arg camera_name)_right_camera_joint" type="fixed">
      <parent link="$(arg camera_name)_camera_center"/>
      <child link="$(arg camera_name)_right_camera_frame"/>
      <origin xyz="0 -${baseline/2} 0" rpy="0 0 0" />
  </joint>

  <link name="$(arg camera_name)_right_camera_frame" />

  <joint name="$(arg camera_name)_right_camera_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="-${M_PI/2} 0.0 -${M_PI/2}"/>
      <parent link="$(arg camera_name)_right_camera_frame"/>
      <child link="$(arg camera_name)_right_camera_optical_frame"/>
  </joint>

  <link name="$(arg camera_name)_right_camera_optical_frame"/>

</robot>
